{"ast":null,"code":"const includesOperator = text => {\n  const operators = ['+', '-', '*', '/', '='];\n  const arrayValues = text.split(' '); // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n  if (arrayValues && arrayValues[arrayValues.length - 1] in operators) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const operationEquals = value => {\n  // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n  if (value.includes(\"+\")) {\n    const array = value.split(\"+\");\n    let result = 0;\n    array.forEach(item => {\n      result += parseInt(item);\n    });\n    return result.toString();\n  }\n\n  if (value.includes(\"-\")) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\n    const array = value.split(\"-\");\n    let result = array[0];\n    array.splice(array.indexOf(array[0]), 1);\n    array.forEach(item => {\n      result = result - parseInt(item);\n    });\n    return result.toString();\n  }\n\n  if (value.includes(\"*\")) {\n    const array = value.split(\"*\");\n    console.log(array);\n    let result = 1;\n    array.forEach(item => {\n      result *= parseInt(item);\n    });\n    return result.toString();\n  }\n\n  if (value.includes(\"/\")) {\n    const array = value.split(\"/\");\n    const result = parseFloat(array[0]) / parseFloat(array[1]);\n    return result.toString();\n  }\n\n  return value;\n};\nexport { includesOperator };","map":{"version":3,"sources":["/home/duda/AcademiaAccenture/accenture-academy-front/calculator/src/helper/funcHelp.js"],"names":["includesOperator","text","operators","arrayValues","split","length","operationEquals","value","includes","array","result","forEach","item","parseInt","toString","splice","indexOf","console","log","parseFloat"],"mappings":"AAAA,MAAMA,gBAAgB,GAAIC,IAAD,IAAU;AACjC,QAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAlB;AACA,QAAMC,WAAW,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAApB,CAFiC,CAIjC;;AACA,MAAGD,WAAW,IAAIA,WAAW,CAACA,WAAW,CAACE,MAAZ,GAAoB,CAArB,CAAX,IAAsCH,SAAxD,EAAmE;AACjE,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAVD;;AAYA,OAAO,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACtC;AACA,MAAGA,KAAK,CAACC,QAAN,CAAe,GAAf,CAAH,EAAuB;AACrB,UAAMC,KAAK,GAAGF,KAAK,CAACH,KAAN,CAAY,GAAZ,CAAd;AACA,QAAIM,MAAM,GAAG,CAAb;AAEAD,IAAAA,KAAK,CAACE,OAAN,CAAeC,IAAD,IAAU;AACtBF,MAAAA,MAAM,IAAIG,QAAQ,CAACD,IAAD,CAAlB;AACD,KAFD;AAIA,WAAOF,MAAM,CAACI,QAAP,EAAP;AACD;;AAED,MAAGP,KAAK,CAACC,QAAN,CAAe,GAAf,CAAH,EAAuB;AACrB;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACH,KAAN,CAAY,GAAZ,CAAd;AACA,QAAIM,MAAM,GAAGD,KAAK,CAAC,CAAD,CAAlB;AACAA,IAAAA,KAAK,CAACM,MAAN,CAAaN,KAAK,CAACO,OAAN,CAAcP,KAAK,CAAC,CAAD,CAAnB,CAAb,EAAsC,CAAtC;AAEAA,IAAAA,KAAK,CAACE,OAAN,CAAeC,IAAD,IAAU;AACtBF,MAAAA,MAAM,GAAGA,MAAM,GAAGG,QAAQ,CAACD,IAAD,CAA1B;AACD,KAFD;AAIA,WAAOF,MAAM,CAACI,QAAP,EAAP;AACD;;AAED,MAAGP,KAAK,CAACC,QAAN,CAAe,GAAf,CAAH,EAAuB;AACrB,UAAMC,KAAK,GAAGF,KAAK,CAACH,KAAN,CAAY,GAAZ,CAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,QAAIC,MAAM,GAAG,CAAb;AAEAD,IAAAA,KAAK,CAACE,OAAN,CAAeC,IAAD,IAAU;AACtBF,MAAAA,MAAM,IAAIG,QAAQ,CAACD,IAAD,CAAlB;AACD,KAFD;AAIA,WAAOF,MAAM,CAACI,QAAP,EAAP;AACD;;AAED,MAAGP,KAAK,CAACC,QAAN,CAAe,GAAf,CAAH,EAAuB;AACrB,UAAMC,KAAK,GAAGF,KAAK,CAACH,KAAN,CAAY,GAAZ,CAAd;AACA,UAAMM,MAAM,GAAGS,UAAU,CAACV,KAAK,CAAC,CAAD,CAAN,CAAV,GAAuBU,UAAU,CAACV,KAAK,CAAC,CAAD,CAAN,CAAhD;AAEA,WAAOC,MAAM,CAACI,QAAP,EAAP;AACD;;AAED,SAAOP,KAAP;AACD,CA9CI;AAgDL,SAASP,gBAAT","sourcesContent":["const includesOperator = (text) => {\n  const operators = ['+', '-', '*', '/', '='];\n  const arrayValues = text.split(' ');\n\n  // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n  if(arrayValues && arrayValues[arrayValues.length -1] in operators) {\n    return true;\n  }\n\n  return false;\n}\n\nexport const operationEquals = (value) => {\n    // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n    if(value.includes(\"+\")){\n      const array = value.split(\"+\");\n      let result = 0;\n      \n      array.forEach((item) => {\n        result += parseInt(item);\n      })\n      \n      return result.toString();\n    }\n\n    if(value.includes(\"-\")){\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\n      const array = value.split(\"-\");\n      let result = array[0];\n      array.splice(array.indexOf(array[0]), 1);\n      \n      array.forEach((item) => {\n        result = result - parseInt(item);\n      })\n\n      return result.toString()\n    }\n\n    if(value.includes(\"*\")){\n      const array = value.split(\"*\");\n      console.log(array)\n      let result = 1;\n      \n      array.forEach((item) => {\n        result *= parseInt(item);\n      })\n\n      return result.toString()\n    }\n\n    if(value.includes(\"/\")){\n      const array = value.split(\"/\");\n      const result = parseFloat(array[0]) / parseFloat(array[1]);\n\n      return result.toString()\n    }\n\n    return value;\n  }\n\n  export { includesOperator }"]},"metadata":{},"sourceType":"module"}