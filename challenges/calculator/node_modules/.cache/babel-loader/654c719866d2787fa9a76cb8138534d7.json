{"ast":null,"code":"var _jsxFileName = \"/home/duda/AcademiaAccenture/accenture-academy-front/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ButtonOperator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '0'\n    };\n  }\n\n  render() {\n    const {\n      funcOperator,\n      funcReset\n    } = this.props;\n    const operators = ['+', '-', '*', '/', '='];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-Operato\",\n      children: [operators.map((operator, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => funcOperator(operator),\n        children: operator\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: funcReset,\n        children: \"LIMPAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = item => {\n      this.setState(prevState => ({\n        value: prevState.value === '0' ? item : prevState.value + ' ' + item\n      }));\n    };\n\n    this.operationNumber = operation => {\n      if (operation !== '=') {\n        this.setState(prevState => ({\n          value: prevState.value + ' ' + operation\n        }));\n      } else {\n        const {\n          value\n        } = this.state; // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n        if (value.includes(\"+\")) {\n          const array = value.split(\"+\");\n          let result = 0;\n          array.forEach(item => {\n            result += parseInt(item);\n          });\n          this.setState({\n            value: result.toString()\n          });\n        }\n\n        if (value.includes(\"-\")) {\n          const array = value.split(\"-\");\n          let result = 0;\n          array.forEach(item => {\n            result = result - parseInt(item);\n          });\n          this.setState({\n            value: result\n          });\n        }\n\n        if (value.includes(\"*\")) {\n          const array = value.split(\"*\");\n          console.log(array);\n          let result = 1;\n          array.forEach(item => {\n            result *= parseInt(item);\n          });\n          this.setState({\n            value: result\n          });\n        }\n\n        if (value.includes(\"/\")) {\n          const array = value.split(\"/\");\n          let result = parseFloat(array[0]) / parseFloat(array[1]);\n          this.setState({\n            value: result\n          });\n        }\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        value: '0'\n      });\n    };\n\n    this.state = {\n      value: '0'\n    };\n  }\n\n  componentDidMount() {\n    console.log(parseFloat(\"12 + 1\"));\n  }\n\n  render() {\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), numbers.map((item, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changeValue(item),\n        children: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ButtonOperator, {\n        funcOperator: this.operationNumber,\n        funcReset: this.reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/duda/AcademiaAccenture/accenture-academy-front/calculator/src/App.js"],"names":["React","Component","ButtonOperator","constructor","props","state","value","render","funcOperator","funcReset","operators","map","operator","idx","App","changeValue","item","setState","prevState","operationNumber","operation","includes","array","split","result","forEach","parseInt","toString","console","log","parseFloat","reset","componentDidMount","numbers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass ButtonOperator extends Component {\n  constructor(props){\n    super(props);\n    this.state= {value: '0'}\n  }\n  render() {\n    const {funcOperator, funcReset} = this.props;\n    const operators = ['+', '-', '*', '/', '='];\n\n    return(\n      <div className=\"button-Operato\">\n        { operators.map((operator, idx) => \n            <button \n              key={idx} \n              onClick={() => funcOperator(operator)}\n            >\n              {operator}\n            </button>\n        )}\n\n        <button onClick={funcReset}>LIMPAR</button>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state= {value: '0'}\n  }\n\n  changeValue = (item) => {\n    this.setState((prevState) => ({\n      value: prevState.value === '0' ? item : prevState.value + ' ' + item\n    }))\n  }\n\n  operationNumber = (operation) => {\n    if(operation !== '='){\n      this.setState((prevState) => ({\n        value: prevState.value + ' ' + operation\n      }))\n    }\n\n    else {\n      const {value} = this.state;\n\n      // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n      if(value.includes(\"+\")){\n        const array = value.split(\"+\");\n        let result = 0;\n        \n        array.forEach((item) => {\n          result += parseInt(item);\n        })\n\n        this.setState(({\n          value: result.toString()\n        }))\n      }\n\n      if(value.includes(\"-\")){\n        const array = value.split(\"-\");\n        let result = 0;\n        \n        array.forEach((item) => {\n          result = result - parseInt(item);\n        })\n\n        this.setState(({\n          value: result\n        }))\n      }\n\n      if(value.includes(\"*\")){\n        const array = value.split(\"*\");\n        console.log(array)\n        let result = 1;\n        \n        array.forEach((item) => {\n          result *= parseInt(item);\n        })\n\n        this.setState(({\n          value: result\n        }))\n      }\n\n      if(value.includes(\"/\")){\n        const array = value.split(\"/\");\n        let result = parseFloat(array[0]) /  parseFloat(array[1]);\n      \n        this.setState(({\n          value: result\n        }))\n      }\n    }\n  }\n\n  componentDidMount() {\n    console.log(parseFloat(\"12 + 1\"))\n  }\n\n  reset = () => {\n    this.setState(({\n      value: '0'\n    }))\n  }\n\n\n  render() {\n    const numbers = ['1','2','3','4','5', '6','7','8','9']\n    const {value} = this.state\n    return (\n      <div className=\"container\">\n        <p>{value}</p>\n\n        {numbers.map((item, idx) =>\n          <button \n            key={idx}\n            onClick={() => this.changeValue(item)}\n          >\n            {item}\n          </button>\n        )}\n        \n        <ButtonOperator funcOperator={this.operationNumber} funcReset={this.reset}/>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}